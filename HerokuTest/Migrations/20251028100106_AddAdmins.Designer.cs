// <auto-generated />
using System;
using HerokuTest;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HerokuTest.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20251028100106_AddAdmins")]
    partial class AddAdmins
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("HerokuTest.Entities.AppUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("ChatId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastCommand")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ChatId = 0L,
                            CreatedAt = new DateTime(2025, 10, 28, 10, 1, 5, 571, DateTimeKind.Utc).AddTicks(684),
                            FirstName = "",
                            IsAdmin = true,
                            LastCommand = "",
                            LastName = "",
                            PhoneNumber = "",
                            Username = "Nx1ze"
                        },
                        new
                        {
                            Id = 2L,
                            ChatId = 0L,
                            CreatedAt = new DateTime(2025, 10, 28, 10, 1, 5, 571, DateTimeKind.Utc).AddTicks(1517),
                            FirstName = "",
                            IsAdmin = true,
                            LastCommand = "",
                            LastName = "",
                            PhoneNumber = "",
                            Username = "chudotovartajikistan"
                        });
                });

            modelBuilder.Entity("HerokuTest.Entities.Tracking", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("AppUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("GoodReceivedDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("GoodsReceived")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ReceivedDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.ToTable("Trackings");
                });

            modelBuilder.Entity("HerokuTest.Entities.Tracking", b =>
                {
                    b.HasOne("HerokuTest.Entities.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserId");

                    b.Navigation("AppUser");
                });
#pragma warning restore 612, 618
        }
    }
}
